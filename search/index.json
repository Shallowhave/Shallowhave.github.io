[{"content":"1. 打开 GitHub: Let’s build from here · GitHub 2. 点击注册 Sign in ","date":"2024-07-15T17:12:00+08:00","permalink":"https://shallowhave.github.io/p/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%B4%E6%98%8E/","title":"一个简单的说明"},{"content":"软硬件环境:\nPVE 8.2.2(内核6.8.4)\n1.安装必要组件\n1 apt update \u0026amp;\u0026amp; apt install -y pve-headers proxmox-headers-$(uname -r) dkms flex bison 如果有错误,修复下\n1 apt --fix-broken install 都安装好后reboot\n2.安装i915的内核驱动\n从 github.com/MoetaYuko/intel-gpu-i915-backports/releases 上获取打包好的最新的文件\n当前写文章时最新的为 I915MT65-24.1.19-3 版本,下载 intel-i915-dkms_1.24.1.19.240119.1.nodrm+i3-1_all.deb 文件\n无论你用SFTP传还是wget,只要把文件弄到PVE上就行,然后开始安装,需要一定时间,如果有其它版本的i915模块要移除掉.其它的模块如果也因为内核变动失效或者报错可以也一并先移除,然后重新安装(重新安装还是报错的那就是不兼容,等更新)\n1 dpkg -i \u0026#39;/root/intel-i915-dkms_1.24.1.19.240119.1.nodrm+i3-1_all.deb\u0026#39; 我这里文件就放在/root目录下\n3.设置\n启动参数\n相对之前稍微有点改动, intel_iommu=on 这项可以不用添加了,6.8内核默认有这个\n其它还是老的,GuC参数设成3,VF最大数量设成7也行或者你想其它的也行,但是别太多,核显性能办不到啊...\n1 nano /etc/default/grub 修改 GRUB_CMDLINE_LINUX_DEFAULT\n1 GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet i915.enable_guc=3 i915.max_vfs=7\u0026#34; 保存后还是更新GRUB\n1 2 update-grub update-initramfs -u sysfsutils组件如果已经有了就直接设置,没有就先安装\n1 apt install -y sysfsutils 设置,根据实际需要拆分的数量来设置\n1 echo \u0026#34;devices/pci0000:00/0000:00:02.0/sriov_numvfs = 2\u0026#34; \u0026gt; /etc/sysfs.conf 全部操作完成无错误后reboot\n","date":"2024-06-13T13:07:05+08:00","image":"https://shallowhave.github.io/img/pve.png","permalink":"https://shallowhave.github.io/p/6.8%E5%86%85%E6%A0%B8pve%E5%BC%80%E5%90%AF%E6%A0%B8%E6%98%BEsr-iov/","title":"6.8内核PVE开启核显SR-IOV"},{"content":"GPU 直通与虚拟化 典型的 GPU 直通将整个 PCIe 图形设备传递给 VM。这意味着只有一台虚拟机可以使用 GPU 资源。这样做的优点是能够通过计算机的 HDMI 或 DisplayPort 端口将视频显示输出到外部显示器。但是，您只能使用一台虚拟机使用 GPU。如果您希望在台式计算机上使用 Proxmox，但又希望通过外部显示器充分利用主桌面操作系统的 GPU 资源，这会很有用。\nProxmox 8.1/8.2 内核要求 默认情况下，Proxmox 8.2 安装 Linux 内核 6.8.x，提供 vGPU 功能的 DKMS 模块不支持该内核。要使用 Proxmox 8.2，您需要固定内核 6.5.13-3，因为该版本已知与 DKMS/vGPU 兼容。按照以下过程降级到并使用 Proxmox 8.2 固定内核 6.5.13-3。我还建议 Proxmox 8.1 用户也使用并固定 6.5.13-3 内核。\n对于 Proxmox 8.1 和 8.2 用户运行以下命令：\n1 2 3 4 5 6 apt update apt install proxmox-headers-6.5.13-3-pve apt install proxmox-kernel-6.5.13-3-pve-signed proxmox-boot-tool kernel pin 6.5.13-3-pve proxmox-boot-tool refresh reboot 重新启动后，验证 Proxmox 是否使用内核 6.5.13-3。\nProxmox 内核配置 注意：这些命令会自动检测您正在运行的内核版本并相应地调整命令。正如前面提到的，对于 Proxmox 8.1 和 8.2，您应该使用并固定内核 6.5.13-5。\n在 Proxmox 主机上打开 shell 并运行以下命令。首先我们需要安装 Git、内核头文件，进行一些清理，然后使用正确的版本设置内核变量。 1 2 3 4 5 apt update \u0026amp;\u0026amp; apt install git sysfsutils pve-headers mokutil -y rm -rf /var/lib/dkms/i915-sriov-dkms* rm -rf /usr/src/i915-sriov-dkms* rm -rf ~/i915-sriov-dkms KERNEL=$(uname -r); KERNEL=${KERNEL%-pve} 现在我们需要克隆 DKMS 存储库并修改配置文件以设置内核版本。检查软件包名称是否为 i915-sriov-dkms 并且软件包版本与您的内核版本匹配。 1 2 3 4 5 6 7 8 cd ~ git clone https://github.com/strongtz/i915-sriov-dkms.git cd ~/i915-sriov-dkms cp -a ~/i915-sriov-dkms/dkms.conf{,.bak} sed -i \u0026#39;s/\u0026#34;@_PKGBASE@\u0026#34;/\u0026#34;i915-sriov-dkms\u0026#34;/g\u0026#39; ~/i915-sriov-dkms/dkms.conf sed -i \u0026#39;s/\u0026#34;@PKGVER@\u0026#34;/\u0026#34;\u0026#39;\u0026#34;$KERNEL\u0026#34;\u0026#39;\u0026#34;/g\u0026#39; ~/i915-sriov-dkms/dkms.conf sed -i \u0026#39;s/ -j$(nproc)//g\u0026#39; ~/i915-sriov-dkms/dkms.conf cat ~/i915-sriov-dkms/dkms.conf 这里我们安装DKMS，链接内核源，并检查状态。验证内核是否显示为已添加。 1 2 3 4 apt install --reinstall dkms -y dkms add . cd /usr/src/i915-sriov-dkms-$KERNEL dkms status 现在让我们构建新内核并检查状态。验证它是否显示已安装 1 2 dkms install -m i915-sriov-dkms -v $KERNEL -k $(uname -r) --force -j 1 dkms status 对于全新的 Proxmox 8.1 及更高版本安装，可能会启用安全启动。为了以防万一，我们需要加载 DKMS 密钥，以便内核加载该模块。运行以下命令，然后输入密码。该密码仅用于 MOK 设置，重启主机时将再次使用。之后就不需要密码了。它不需要与您用于 root 帐户的密码相同。 1 mokutil --import /var/lib/dkms/mok.pub Proxmox GRUB 配置 如果您的 Proxmox 主机中没有 Google Coral PCIe TPU，请返回 Proxmox shell 运行以下命令。如果您这样做了，您就会知道，所以如果您不确定，请运行第一组命令。如果您的 Google Coral 是 USB，也请使用第一组命令。如果您的 Google Coral 是 PCIe 模块，请运行第二个命令块。 1 2 3 4 5 cp -a /etc/default/grub{,.bak} sudo sed -i \u0026#39;/^GRUB_CMDLINE_LINUX_DEFAULT/c\\GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet intel_iommu=on iommu=pt i915.enable_guc=3 i915.max_vfs=7\u0026#34;\u0026#39; /etc/default/grub update-grub update-initramfs -u -k all apt install sysfsutils -y 如果您的 Proxmox 主机确实有 Google Coral PCIe TPU，并且您使用 PCIe 直通 LXC 或 VM，请改用此命令。这将在 Proxmox 主机级别将 Coral 设备列入黑名单，以便您的 LXC/VM 可以获得独占访问权限。\n1 cp -a /etc/default/grub{,.bak} sudo sed -i \u0026lsquo;/^GRUB_CMDLINE_LINUX_DEFAULT/c\\GRUB_CMDLINE_LINUX_DEFAULT=\u0026ldquo;quiet intel_iommu=on iommu=pt i915.enable_guc=3 i915.max_vfs=7 initcall_blacklist=sysfb_init pcie_aspm=off\u0026rdquo;\u0026rsquo; /etc/default/grub update-grub update-initramfs -u -k all apt install sysfsutils -y\n运行以下命令并根据需要修改 PCIe 总线编号。在本例中，我使用 00:02.0。要验证文件是否已修改，请 cat 该文件并确保它已被修改。 1 2 echo \u0026#34;devices/pci0000:00/0000:00:02.0/sriov_numvfs = 7\u0026#34; \u0026gt; /etc/sysfs.conf cat /etc/sysfs.conf ","date":"2024-02-21T13:07:05+08:00","image":"https://shallowhave.github.io/img/pve.png","permalink":"https://shallowhave.github.io/p/proxmox-ve-8.2%E4%BD%BF%E7%94%A8-intel-alder-lake-%E7%9A%84-windows-11-vgpu-vt-d-%E7%9B%B4%E9%80%9A/","title":"Proxmox VE 8.2：使用 Intel Alder Lake 的 Windows 11 vGPU (VT-d) 直通"}]